map $http_host $this_host {
    "" $host;
    default $http_host;
}

#map $http_x_forwarded_proto $the_scheme {
#    default $http_x_forwarded_proto;
#    "" $scheme;
#}

#map $http_x_forwarded_host $the_host {
#    default $http_x_forwarded_host;
#    "" $this_host;
#}
server {
    listen 80;
    server_name nextcloud.example.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name nextcloud.example.com;

    include /config/nginx/ssl.conf;

    # The below allows for being behind a reverse proxy and allowing the Nextcloud app to connect
    server_tokens off;

    location = /robots.txt {
	add_header  Content-Type  text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
    }

    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
        deny all;
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	proxy_hide_header X-Frame-Options;

        proxy_pass http://nextcloud-app;

        proxy_redirect http://nextcloud-app https://nextcloud.example.com;
    }

    location ~* ^/ds-vpath/ {
        rewrite /ds-vpath/(.*) /$1  break;
        proxy_pass http://onlyoffice-document-server;
        proxy_redirect     off;

        client_max_body_size 100m;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host/ds-vpath;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # redirect CalDAV or CardDAV so they work behind the reverse proxy
    location /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
    }

    location /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
    }
}
